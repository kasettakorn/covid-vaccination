{"version":3,"sources":["components/DetailCard.js","components/BarChart.js","App.js","reportWebVitals.js","index.js"],"names":["DetailCard","props","useState","data","filter","iso_code","dataset","console","log","length","className","covidWorld","toFixed","BarChart","plotData","map","country","population","percentage","sort","a","b","labels","datasets","label","backgroundColor","borderColor","borderWidth","height","options","plugins","tooltip","callbacks","context","parsed","y","scales","ticks","callback","value","index","values","Header","Layout","Content","Footer","App","setData","setCovidWorld","useEffect","fetch","then","res","json","response","getData","getCovidWorldData","style","padding","marginTop","borderRadius","textAlign","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93438a13.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Card } from \"antd\";\n\nexport default function DetailCard(props) {\n  const [dataset, setDataset] = useState(\n    props.data.filter((data) => data.iso_code === \"THA\")\n  );\n  console.log(dataset[0][\"data\"][dataset[0][\"data\"].length - 1]);\n  return (\n    <div>\n      <div className=\"card border-primary mb-3\">\n        <div className=\"card-body text-primary\">\n          <h4 className=\"card-title\">ðŸ‡¹ðŸ‡­ Thailand Vaccination</h4>\n          <h1 className=\"card-text\">\n              {(\n                (dataset[0][\"data\"][dataset[0][\"data\"].length - 1][\n                  \"total_vaccinations\"\n                ] /\n                  props.covidWorld[\"THA\"][\"population\"]) *\n                100\n              ).toFixed(2)}\n            {\" \"}%\n         \n          </h1>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nexport default function BarChart(props) {\n  const [dataset] = useState(\n    props.data.filter(\n      (data) =>\n        data.iso_code === \"THA\" ||\n        data.iso_code === \"LAO\" ||\n        data.iso_code === \"KHM\" ||\n        data.iso_code === \"IDN\" ||\n        data.iso_code === \"MYS\" ||\n        data.iso_code === \"BRN\" ||\n        data.iso_code === \"SGP\" ||\n        data.iso_code === \"MMR\" ||\n        data.iso_code === \"VNM\" ||\n        data.iso_code === \"PHL\"\n    )\n  );\n  console.log(props.covidWorld);\n  const plotData = dataset.map((data) => {\n    return {\n      country: data.country,\n      iso_code: data.iso_code,\n      population: props.covidWorld[data.iso_code][\"population\"],\n      percentage:\n        data.data[data.data.length - 1][\"total_vaccinations\"] != null\n          ? (data.data[data.data.length - 1][\"total_vaccinations\"] /\n              props.covidWorld[data.iso_code][\"population\"]) *\n            100\n          : (data.data[data.data.length - 2][\"total_vaccinations\"] /\n              props.covidWorld[data.iso_code][\"population\"]) *\n            100,\n    };\n  });\n  plotData.sort((a, b) => b.percentage - a.percentage);\n  console.log(plotData);\n\n  const data = {\n    labels: plotData.map((data) => {\n      return data.country;\n    }),\n    datasets: [\n      {\n        label: \"Percentage (%)\",\n        data: plotData.map((data) => {\n          return data.percentage;\n        }),\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n          \"rgba(255, 205, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(201, 203, 207, 0.2)\",\n        ],\n        borderColor: [\n          \"rgb(255, 99, 132)\",\n          \"rgb(255, 159, 64)\",\n          \"rgb(255, 205, 86)\",\n          \"rgb(75, 192, 192)\",\n          \"rgb(54, 162, 235)\",\n          \"rgb(153, 102, 255)\",\n          \"rgb(201, 203, 207)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <div>\n        <h3>Bar Chart</h3>\n      <Bar\n        height={70}\n        data={data}\n        options={{\n          plugins: {\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  var label = context.dataset.label || \"\";\n                  label += context.parsed.y.toFixed(2);\n\n                  return label;\n                },\n              },\n            },\n          },\n          scales: {\n            y: {\n              ticks: {\n                // Include a dollar sign in the ticks\n                callback: function (value, index, values) {\n                  return \"$\" + value;\n                },\n              },\n            },\n          },\n        }}\n      ></Bar>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Layout, Spin } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./style/layout.css\";\nimport DetailCard from \"./components/DetailCard\";\nimport LineChart from \"./components/LineChart\";\nimport BarChart from \"./components/BarChart\";\n\nconst { Header, Content, Footer } = Layout;\n\nexport default function App() {\n  const [data, setData] = useState(null);\n  const [covidWorld, setCovidWorld] = useState(null);\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch(\n        \"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.json\"\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          data.sort(\n            (a, b) =>\n              b.data[b.data.length - 1][\"total_vaccinations\"] -\n              a.data[a.data.length - 1][\"total_vaccinations\"]\n          );\n          return data.filter((data) => data.iso_code.length === 3);\n        });\n      setData(response);\n    }\n    async function getCovidWorldData() {\n      const response = await fetch(\n        \"https://covid.ourworldindata.org/data/owid-covid-data.json\"\n      ).then((res) => {\n        return res.json();\n      });\n\n      setCovidWorld(response);\n\n    }\n    getData();\n    getCovidWorldData();\n  }, []);\n  if (!data || !covidWorld) {\n    return <Spin size=\"large\" />;\n  }\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <div className=\"logo\">ðŸ’‰ðŸ¦  SEA Covid-19 Vaccination Dashboard</div>\n        {/* <div className=\"logoR\">Data from ourworldindata.org</div> */}\n      </Header>\n      <Content style={{ padding: \"20px\" }}>\n        <h1>Overview</h1>\n          <div className=\"row\" style={{marginTop:\"20px\"}}>\n            \n            <div className=\"col\">\n              <DetailCard data={data} covidWorld={covidWorld}  />\n            </div>\n            <div className=\"col\">\n              {/* <DetailCard data={data} covidWorld={covidWorld}  /> */}\n            </div>\n            <div className=\"col\">\n              {/* <DetailCard data={data} covidWorld={covidWorld}  /> */}\n            </div>\n          </div>\n          <div className=\"row\" style={{marginTop:\"20px\"}}>\n            <div className=\"col\" style={{backgroundColor:\"white\", borderRadius:\"10px\", padding:\"10px\"}}>\n              <BarChart data={data} covidWorld={covidWorld} />\n            </div>\n            {/* <div className=\"col\" style={{backgroundColor:\"white\", borderRadius:\"10px\", padding:\"10px\"}}>\n              <LineChart data={data} covidWorld={covidWorld} />\n            </div> */}\n          </div>\n\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>\n        Ant Design Â©2021 Created by Ronnakorn Hompoa\n      </Footer>\n    </Layout>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}